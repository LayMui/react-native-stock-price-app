version: 2.1

orbs:
  ruby: circleci/ruby@1.2.0
  
jobs:
  node:
    working_directory: ~/react-native-stock-price-app
    
    docker:
      - image: cimg/node:16.14.2

    steps:
      - checkout
        
      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      - run: yarn install

      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules

      - persist_to_workspace:
          root: ~/react-native-stock-price-app
          paths:
            - node_modules

      - store_test_results:
          path: reporter

      - store_artifacts:
          path: reporter

  ios-build-and-test:
    working_directory: ~/react-native-stock-price-app
    macos:
      xcode: 13.3
    environment:
      FL_OUTPUT_DIR: output
      FASTLANE_LANE: testandbuild
      PLATFORM: ios
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      - run: yarn install

      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules

      - run: 
          command: ln -s $(which node) /usr/local/bin/node 
           
      - run: 
          command: pod install
          working_directory: ios

      - run: 
          command: bundle install
          working_directory: ios

      - save_cache:
          key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

      - save_cache:
          key: pods-v1-{{ checksum "ios/Podfile.lock" }}-{{ arch }}
          paths:
            - ios/Pods
            
      # - run:
      #     name: Fastlane spaceauth
      #     command: bundle exec fastlane spaceauth -u "tohlaymui35@gmail.com"
      #     working_directory: ios

      - run:
          name: Fastlane
          command: bundle exec fastlane $FASTLANE_LANE
          working_directory: ios
      
      - store_artifacts:
          path: $PLATFORM/$FL_OUTPUT_DIR
          destination: ipa
  

      - run:
          name: App upload and Set app id in environment variable.
          command: |
            APP_UPLOAD_RESPONSE=$(curl -u "$BROWSERSTACK_USERNAME:$BROWSERSTACK_ACCESS_KEY" -X POST https://api-cloud.browserstack.com/app-automate/upload -F "file=@react-native-stock-price-app/ios/output/stockprice.ipa")
            echo "APP_UPLOAD_RESPONSE :  " + $APP_UPLOAD_RESPONSE
            APP_ID=$(echo $APP_UPLOAD_RESPONSE | jq -r ".app_url")
            if [ $APP_ID != null ]; then
              echo "Apk uploaded to BrowserStack with app id : ",$APP_ID;
              echo "export BROWSERSTACK_APP_ID=$APP_ID" >> $BASH_ENV;
              source $BASH_ENV;
              echo "Setting value of BROWSERSTACK_APP_ID in environment variables to  ",$APP_ID;
            else
              UPLOAD_ERROR_MESSAGE=$(echo $APP_UPLOAD_RESPONSE | jq -r ".error")
              echo "App upload failed, reason : ",$UPLOAD_ERROR_MESSAGE
              exit 1;
            fi


  android-build-and-test:
    working_directory: ~/react-native-stock-price-app/android
    environment:
      FL_OUTPUT_DIR: output
      FASTLANE_LANE: beta_release
    docker:
      - image: circleci/android:api-29-node
     
    steps:
      - checkout:
          path: ~/react-native-stock-price-app

      - attach_workspace:
          at: ~/react-native-stock-price-app

      - restore_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}

      - run: bundle install

      - save_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

      - run:
          name: Fastlane
          command: bundle exec fastlane $FASTLANE_LANE

      - store_artifacts:
          path: $PLATFORM/app/build/outputs/apk/release/app-release.apk

      - run:
          name: App upload and Set app id in environment variable.
          command: |
            APP_UPLOAD_RESPONSE=$(curl -u "$BROWSERSTACK_USERNAME:$BROWSERSTACK_ACCESS_KEY" -X POST https://api-cloud.browserstack.com/app-automate/upload -F "file=@react-native-stock-price-app/android/app/build/outputs/apk/debug/app-debug.apk")
            echo "APP_UPLOAD_RESPONSE :  " + $APP_UPLOAD_RESPONSE
            APP_ID=$(echo $APP_UPLOAD_RESPONSE | jq -r ".app_url")
            if [ $APP_ID != null ]; then
              echo "Apk uploaded to BrowserStack with app id : ",$APP_ID;
              echo "export BROWSERSTACK_APP_ID=$APP_ID" >> $BASH_ENV;
              source $BASH_ENV;
              echo "Setting value of BROWSERSTACK_APP_ID in environment variables to  ",$APP_ID;
            else
              UPLOAD_ERROR_MESSAGE=$(echo $APP_UPLOAD_RESPONSE | jq -r ".error")
              echo "App upload failed, reason : ",$UPLOAD_ERROR_MESSAGE
              exit 1;
            fi


workflows:
  node-android-ios:
    jobs:
      - node
      - android-build-and-test:
          context:
            - BROWSERSTACK_CREDENTIALS
          requires:
            - node
      - ios-build-and-test:
          requires:
            - node

