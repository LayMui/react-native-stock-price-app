import { ChainablePromiseElement } from 'webdriverio';
const https = require('https');
const axios = require('axios');

/**
 * sub page containing specific selectors and methods for a specific page
 */
class imagium  {
  
  	//Declarice static container for runtime UID
    public static uidCommon: string ='';

	//Specify yor project secret key
	public static endpoint: string = 'http://sandbox.imagium.io/';

	//Specify yor project secret key
    public static projectKey: string = '01ba0076-06ba-46ce-8af9-87f13eeec82d';
    
    /**
     * getUID method returns UID for the specified TestName
     */
    public  async  getUID (testName: string) {
        var testUID;
        console.log('start the api call');
        const httpsAgent = new https.Agent({ rejectUnauthorized: false })
        let res =  await  axios.post(imagium.endpoint+'api/GetUID', {TestName: testName, ProjectKey: imagium.projectKey}, {
            httpsAgent: new https.Agent({
              rejectUnauthorized: false
            })
          })
   .then((res: { status: any; data: any; }) => {
       imagium.uidCommon = res.data.toString();
       console.log('Body of getUID: ', imagium.uidCommon);
       return imagium.uidCommon;
   }).catch((err: any) => {
    console.log('stop the api call 1');
       console.error(err);
       console.log(err);
       return imagium.uidCommon;
   })
        return imagium.uidCommon;
    }

    /**
     * validate method is used to make comparison
     *@stepName - The stepname should be uniques alphanumeric
     *@base64 -  The snapshot image in Base64 Format
     *@testRunId - The runtime UID generated by getUID method
     */
    public async validate(stepName: string, base64: string, testRunID: string) {
       let res = await axios.post(imagium.endpoint+'api/Validate', {StepName: stepName, TestRunID: imagium.uidCommon, ImageBase64:  base64}, {
        httpsAgent: new https.Agent({
          rejectUnauthorized: false
        })
      })
        .then((res: { status: any; data: any; }) => {
            console.log(`Status of validateScreenshot: ${res.status}`);
            console.log('Response of validate: ', res.data);
        }).catch((err: any) => {
            console.error(err);
        })      
    }
}
export default new imagium();

